package com.test.thirdlogindemo;

/**
 * Created by xxl on 2017/5/31.
 */

public class SingleTon {

//    public static SingleTon instance = null;

    /*   public static SingleTon getInstance() {//单例模式方法1，lazy模式，优点：不会资源浪费，缺点：没有考虑线程安全
               if (instance == null) {
                   instance = new SingleTon();
               }
               return instance;
           }*/


    private SingleTon() {
    }

    
    static class Instance {//单例模式方法1，静态内部类，不需要使用synchronize，不需要双重判断instance == nullJVM加载类是互斥的，所以不用考虑同步问题，相当于lazy模式，线程安全
        private static SingleTon in = new SingleTon();
    }

    public static SingleTon getInstance() {
        return Instance.in;
    }

}
